{"ast":null,"code":"var _jsxFileName = \"/Users/yuliiaposikera/Desktop/Udemy/Project for Routing/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // const events = useLoaderData();\n  // const data = useLoaderData();\n  const {\n    events\n  } = useLoaderData();\n  console.log(events);\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  // return <EventsList events={events} />;\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadEvents => {\n        /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Can't fetch the data!\" };\n    // throw { message: \"Can't fetch the data!\" };\n    // throw new Response(JSON.stringify({ message: \"Can't fetch the data!\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Can't fetch the data!\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    // return response;\n    const resData = await response.json(); // to working with defer\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useLoaderData","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","console","log","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadEvents","_c","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Users/yuliiaposikera/Desktop/Udemy/Project for Routing/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { defer, json, useLoaderData, Await } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\n\nfunction EventsPage() {\n  // const events = useLoaderData();\n  // const data = useLoaderData();\n  const { events } = useLoaderData();\n  console.log(events);\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  // return <EventsList events={events} />;\n  return (\n    <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading....</p>}>\n      <Await resolve={events}>\n        {(loadEvents) => {\n          <EventsList events={loadEvents} />;\n        }}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Can't fetch the data!\" };\n    // throw { message: \"Can't fetch the data!\" };\n    // throw new Response(JSON.stringify({ message: \"Can't fetch the data!\" }), {\n    //   status: 500,\n    // });\n    throw json({ message: \"Can't fetch the data!\" }, { status: 500 });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    // return response;\n    const resData = await response.json(); // to working with defer\n    return resData.events;\n  }\n}\n\nexport function loader() {\n  return defer({ events: loadEvents() });\n}\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA,MAAM;IAAEC;EAAO,CAAC,GAAGR,aAAa,CAAC,CAAC;EAClCS,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB;EACA;EACA;EACA;EACA;EACA,oBACEH,OAAA,CAACF,QAAQ;IAACQ,QAAQ,eAAEN,OAAA;MAAGO,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACrET,OAAA,CAACJ,KAAK;MAACkB,OAAO,EAAEX,MAAO;MAAAM,QAAA,EACnBM,UAAU,IAAK;QACf,aAAAf,OAAA,CAACH,UAAU;UAACM,MAAM,EAAEY;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACX,EAAA,CAnBQD,UAAU;EAAA,QAGEN,aAAa;AAAA;AAAAqB,EAAA,GAHzBf,UAAU;AAqBnB,eAAeA,UAAU;AACzB,eAAec,UAAUA,CAAA,EAAG;EAC1B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,MAAMzB,IAAI,CAAC;MAAE0B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE,CAAC,MAAM;IACL;IACA;IACA;IACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACvB,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,OAAO4B,OAAO,CAACnB,MAAM;EACvB;AACF;AAEA,OAAO,SAASoB,MAAMA,CAAA,EAAG;EACvB,OAAO9B,KAAK,CAAC;IAAEU,MAAM,EAAEY,UAAU,CAAC;EAAE,CAAC,CAAC;AACxC;AAAC,IAAAC,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}