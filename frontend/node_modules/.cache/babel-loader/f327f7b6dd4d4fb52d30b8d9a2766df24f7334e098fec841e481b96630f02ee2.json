{"ast":null,"code":"var _jsxFileName = \"/Users/yuliiaposikera/Desktop/Udemy/Project for Routing/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // const events = useLoaderData();\n  const data = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  // return <EventsList events={events} />;\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: data.events,\n    children: loadEvents => {\n      /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Can't fetch the data!\" };\n    // throw { message: \"Can't fetch the data!\" };\n    // throw new Response(JSON.stringify({ message: \"Can't fetch the data!\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Can't fetch the data!\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useLoaderData","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","resolve","events","children","loadEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/yuliiaposikera/Desktop/Udemy/Project for Routing/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { defer, json, useLoaderData, Await } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  // const events = useLoaderData();\n  const data = useLoaderData();\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  // const events = data.events;\n  // return <EventsList events={events} />;\n  return (\n    <Await resolve={data.events}>\n      {(loadEvents) => {\n        <EventsList events={loadEvents} />;\n      }}\n    </Await>\n  );\n}\n\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Can't fetch the data!\" };\n    // throw { message: \"Can't fetch the data!\" };\n    // throw new Response(JSON.stringify({ message: \"Can't fetch the data!\" }), {\n    //   status: 500,\n    // });\n    throw json({ message: \"Can't fetch the data!\" }, { status: 500 });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\n\nexport function loader() {\n  return defer({ events: loadEvents() });\n}\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA,oBACEI,OAAA,CAACH,KAAK;IAACO,OAAO,EAAED,IAAI,CAACE,MAAO;IAAAC,QAAA,EACxBC,UAAU,IAAK;MACf,aAAAP,OAAA,CAACF,UAAU;QAACO,MAAM,EAAEE;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ;AAACT,EAAA,CAfQD,UAAU;EAAA,QAEJL,aAAa;AAAA;AAAAgB,EAAA,GAFnBX,UAAU;AAiBnB,eAAeA,UAAU;AACzB,eAAeM,UAAUA,CAAA,EAAG;EAC1B,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE,CAAC,MAAM;IACL;IACA;IACA,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOxB,KAAK,CAAC;IAAEW,MAAM,EAAEE,UAAU,CAAC;EAAE,CAAC,CAAC;AACxC;AAAC,IAAAK,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}